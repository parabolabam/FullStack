import koa from 'koa'
import request from 'supertest'
import serve from '../src'

describe('koa2 serve static', () => {

  describe('default static serve root', () => {
    const app = new koa()

    app.use(serve({}))

    const server = app.listen()

    it('file ok', done => {
      request(server)
        .get('/test/text.txt')
        .expect(200, 'test text\n', done)
    })

    it('not find file', done => {
      request(server)
        .get('/test/no-text.txt')
        .expect(404, done)
    })

    it('no explicit request path', done => {
      request(server)
        .get('')
        .expect(404, done)
    })

    it('HEAD works', done => {
      request(server)
        .head('/test/text.txt')
        .expect(200, done)
    })

    it('POST should not works', done => {
      request(server)
        .post('/test/text.txt')
        .expect(405, done)
    })

  })

  describe('default path should work', () => {
    const app = new koa()

    app.use(serve({
      root: __dirname
    }))

    const server = app.listen()
    it('file ok', done => {
      request(server)
        .get('/text.txt')
        .expect(200, 'test text\n', done)
    })

    it('not find file', done => {
      request(server)
        .get('/no-text.txt')
        .expect(404, done)
    })

  })

  describe('explicit path should work', () => {
    const app = new koa()

    app.use(serve({
      root: __dirname,
      path: '/static'
    }))

    const server = app.listen()
    it('file ok', done => {
      request(server)
        .get('/static/text.txt')
        .expect(200, 'test text\n', done)
    })

    it('not find file', done => {
      request(server)
        .get('/static/no-text.txt')
        .expect(404, done)
    })

    it('partial path', done => {
      request(server)
        .get('/staticpartial/no-text.txt')
        .expect(404, done)
    })

  })


  describe('no explicit option', () => {
    const app = new koa()

    app.use(serve())
    const server = app.listen()
    it('file ok', done => {
      request(server)
        .get('/test/text.txt')
        .expect(200, 'test text\n', done)
    })

    it('not find file', done => {
      request(server)
        .get('/test/no-text.txt')
        .expect(404, done)
    })

  })




});
