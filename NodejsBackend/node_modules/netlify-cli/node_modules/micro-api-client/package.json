{
  "_args": [
    [
      "micro-api-client@https://registry.npmjs.org/micro-api-client/-/micro-api-client-3.3.0.tgz",
      "/home/vlad/Desktop/NodejsProjects/fullStackBranches/backend/NodejsBackend/node_modules/netlify-cli"
    ]
  ],
  "_from": "micro-api-client@https://registry.npmjs.org/micro-api-client/-/micro-api-client-3.3.0.tgz",
  "_id": "micro-api-client@3.3.0",
  "_inCache": true,
  "_location": "/netlify-cli/micro-api-client",
  "_phantomChildren": {},
  "_requested": {
    "name": "micro-api-client",
    "raw": "micro-api-client@https://registry.npmjs.org/micro-api-client/-/micro-api-client-3.3.0.tgz",
    "rawSpec": "https://registry.npmjs.org/micro-api-client/-/micro-api-client-3.3.0.tgz",
    "scope": null,
    "spec": "https://registry.npmjs.org/micro-api-client/-/micro-api-client-3.3.0.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "/netlify-cli/netlify"
  ],
  "_resolved": "https://registry.npmjs.org/micro-api-client/-/micro-api-client-3.3.0.tgz",
  "_shasum": "52dd567d322f10faffe63d19d4feeac4e4ffd215",
  "_shrinkwrap": null,
  "_spec": "micro-api-client@https://registry.npmjs.org/micro-api-client/-/micro-api-client-3.3.0.tgz",
  "_where": "/home/vlad/Desktop/NodejsProjects/fullStackBranches/backend/NodejsBackend/node_modules/netlify-cli",
  "author": {
    "name": "Mathias Biilmann Christensen"
  },
  "bugs": {
    "url": "https://github.com/netlify/micro-api-client/issues"
  },
  "dependencies": {},
  "description": "Micro REST API client",
  "devDependencies": {
    "babel-cli": "^6.8.0",
    "babel-eslint": "^8.2.1",
    "babel-plugin-syntax-object-rest-spread": "^6.8.0",
    "babel-plugin-transform-builtin-extend": "^1.1.2",
    "babel-plugin-transform-object-rest-spread": "^6.8.0",
    "babel-preset-env": "^1.6.1",
    "eslint": "^4.15.0",
    "eslint-config-prettier": "^2.3.0",
    "eslint-plugin-import": "^2.8.0",
    "eslint-plugin-prettier": "^2.1.2",
    "prettier": "^1.10.1"
  },
  "files": [
    "lib"
  ],
  "homepage": "https://github.com/netlify/micro-api-client",
  "keywords": [
    "api",
    "fetch",
    "netlify"
  ],
  "license": "ISC",
  "main": "lib/index.js",
  "name": "micro-api-client",
  "optionalDependencies": {},
  "readme": "# micro-api-client\n\n[![Build Status](https://travis-ci.org/netlify/micro-api-client.svg?branch=master)](https://travis-ci.org/netlify/micro-api-client)\n\nSmall library for talking to micro REST APIs (not related to Netlify's main API).\n\n## Installation\n\n```\nyarn add micro-api-client\n```\n\n## Usage\n\n```js\nimport API, { getPagination } from 'micro-api-client'\n\nconst api = new API(\"/some/api/endpoint\");\napi\n  .request(\"foo\")\n  .then(response => console.log(response))\n  .catch(err => console.error(err));\n```\n\n### API\n\n### `api = new API(apiURL, [opts])`\n\nCreate a new `micro-api-client` instance. `apiURL` can be a full or relative URL. Optional `opts` include:\n\n```js\n{\n  defaultHeaders: {\n  } // header values to include in every request.\n}\n```\n\n### `api.request(path, [opts])`\n\nMake a request to the `apiURL` at the given `path`. Optional `opts` are passed to the [`fetch`](https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch) API:\n\n```js\n// Default options\n{\n  headers: {} // Optional headers object.  Overrides defaultHeaders\n  credentials: \"same-origin\" // set fetch credentials option\n  \"Content-Type\": \"application/json\" // set Content-Type fetch option\n}\n```\n\nReturns a promise with the `response`. If the `contentType` is JSON, it will be checked for pagination and return either the parsed JSON object or a paginated JSON object:\n\n```js\n// See src/pagination.js\n{\n  pagination: {\n    last,\n    next,\n    prev,\n    first,\n    current,\n    total\n  },\n  items: json\n}\n```\n\nIf an error occurs during the request, the promise may be rejected with an `HTTPError`, `TextHTTPError`, or `JSONHTTPError`.\n\n### `class HTTPError extends Error`\n\nAdditional error properties from Error\n\n```js\n{\n  stack, // stack trace of error\n  status // status code of response\n}\n```\n\n### `class TextHTTPError extends HTTPError`\n\nAdditional error properties from HTTPError\n\n```js\n{\n  data // data of text response\n}\n```\n\n### `class JSONHTTPError extends HTTPError`\n\nAdditional error properties from HTTPError\n\n```js\n{\n  json // json of a JSON response\n}\n```\n\n### `pagination = getPagination(response)`\n\nReturns a pagination object that `micro-api-client` uses internally.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/netlify/micro-api-client.git"
  },
  "scripts": {
    "compile": "babel src -d lib",
    "format": "eslint . --fix && prettier --write 'src/**/*.js'",
    "prepublish": "npm run compile",
    "prettier-preview": "prettier --list-different 'src/**/*.js'",
    "test": "eslint ."
  },
  "version": "3.3.0"
}
