{
  "_args": [
    [
      "p-wait-for@https://registry.npmjs.org/p-wait-for/-/p-wait-for-2.0.0.tgz",
      "/home/vlad/Desktop/NodejsProjects/fullStackBranches/backend/NodejsBackend/node_modules/netlify-cli"
    ]
  ],
  "_from": "p-wait-for@https://registry.npmjs.org/p-wait-for/-/p-wait-for-2.0.0.tgz",
  "_id": "p-wait-for@2.0.0",
  "_inCache": true,
  "_location": "/netlify-cli/p-wait-for",
  "_phantomChildren": {},
  "_requested": {
    "name": "p-wait-for",
    "raw": "p-wait-for@https://registry.npmjs.org/p-wait-for/-/p-wait-for-2.0.0.tgz",
    "rawSpec": "https://registry.npmjs.org/p-wait-for/-/p-wait-for-2.0.0.tgz",
    "scope": null,
    "spec": "https://registry.npmjs.org/p-wait-for/-/p-wait-for-2.0.0.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "/netlify-cli",
    "/netlify-cli/netlify"
  ],
  "_resolved": "https://registry.npmjs.org/p-wait-for/-/p-wait-for-2.0.0.tgz",
  "_shasum": "57a0367fb2ed23fcf1cc71db78b119a2068ca0f1",
  "_shrinkwrap": null,
  "_spec": "p-wait-for@https://registry.npmjs.org/p-wait-for/-/p-wait-for-2.0.0.tgz",
  "_where": "/home/vlad/Desktop/NodejsProjects/fullStackBranches/backend/NodejsBackend/node_modules/netlify-cli",
  "author": {
    "email": "sindresorhus@gmail.com",
    "name": "Sindre Sorhus",
    "url": "sindresorhus.com"
  },
  "bugs": {
    "url": "https://github.com/sindresorhus/p-wait-for/issues"
  },
  "dependencies": {
    "p-timeout": "^2.0.1"
  },
  "description": "Wait for a condition to be true",
  "devDependencies": {
    "ava": "*",
    "delay": "^3.0.0",
    "time-span": "^2.0.0",
    "xo": "*"
  },
  "engines": {
    "node": ">=6"
  },
  "files": [
    "index.js"
  ],
  "homepage": "https://github.com/sindresorhus/p-wait-for#readme",
  "keywords": [
    "async",
    "await",
    "bluebird",
    "boolean",
    "condition",
    "for",
    "poll",
    "polling",
    "promise",
    "promises",
    "wait",
    "waits"
  ],
  "license": "MIT",
  "name": "p-wait-for",
  "optionalDependencies": {},
  "readme": "# p-wait-for [![Build Status](https://travis-ci.org/sindresorhus/p-wait-for.svg?branch=master)](https://travis-ci.org/sindresorhus/p-wait-for)\n\n> Wait for a condition to be true\n\nCan be useful for polling.\n\n\n## Install\n\n```\n$ npm install p-wait-for\n```\n\n\n## Usage\n\n```js\nconst pWaitFor = require('p-wait-for');\nconst pathExists = require('path-exists');\n\n(async () => {\n\tawait pWaitFor(() => pathExists('unicorn.png'));\n\tconsole.log('Yay! The file now exists.');\n})();\n```\n\n\n## API\n\n### pWaitFor(condition, [options])\n\nReturns a `Promise` that resolves when `condition` returns `true`. Rejects if `condition` throws or returns a `Promise` that rejects.\n\n#### condition\n\nType: `Function`\n\nExpected to return a `boolean` or a `Promise` for a `boolean`.\n\n#### options\n\nType: `Object`\n\n##### interval\n\nType: `number`<br>\nDefault: `20`\n\nNumber of milliseconds to wait before retrying `condition`.\n\n##### timeout\n\nType: `number`<br>\nDefault: `Infinity`\n\nNumber of milliseconds to wait before automatically rejecting.\n\n\n## Related\n\n- [p-whilst](https://github.com/sindresorhus/p-whilst) - Calls a function repeatedly while a condition returns true and then resolves the promise\n- [More…](https://github.com/sindresorhus/promise-fun)\n\n\n## License\n\nMIT © [Sindre Sorhus](https://sindresorhus.com)\n",
  "readmeFilename": "readme.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/sindresorhus/p-wait-for.git"
  },
  "scripts": {
    "test": "xo && ava"
  },
  "version": "2.0.0"
}
