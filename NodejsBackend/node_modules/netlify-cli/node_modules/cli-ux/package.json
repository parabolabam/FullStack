{
  "_args": [
    [
      "cli-ux@https://registry.npmjs.org/cli-ux/-/cli-ux-4.9.1.tgz",
      "/home/vlad/Desktop/NodejsProjects/fullStackBranches/backend/NodejsBackend/node_modules/netlify-cli"
    ]
  ],
  "_from": "cli-ux@https://registry.npmjs.org/cli-ux/-/cli-ux-4.9.1.tgz",
  "_id": "cli-ux@4.9.1",
  "_inCache": true,
  "_location": "/netlify-cli/cli-ux",
  "_phantomChildren": {},
  "_requested": {
    "name": "cli-ux",
    "raw": "cli-ux@https://registry.npmjs.org/cli-ux/-/cli-ux-4.9.1.tgz",
    "rawSpec": "https://registry.npmjs.org/cli-ux/-/cli-ux-4.9.1.tgz",
    "scope": null,
    "spec": "https://registry.npmjs.org/cli-ux/-/cli-ux-4.9.1.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "/netlify-cli",
    "/netlify-cli/@oclif/plugin-not-found"
  ],
  "_resolved": "https://registry.npmjs.org/cli-ux/-/cli-ux-4.9.1.tgz",
  "_shasum": "3fce340f4d86f4e9249242d0c6a6adab10da4222",
  "_shrinkwrap": null,
  "_spec": "cli-ux@https://registry.npmjs.org/cli-ux/-/cli-ux-4.9.1.tgz",
  "_where": "/home/vlad/Desktop/NodejsProjects/fullStackBranches/backend/NodejsBackend/node_modules/netlify-cli",
  "author": {
    "name": "Jeff Dickey @jdxcode"
  },
  "bugs": {
    "url": "https://github.com/oclif/cli-ux/issues"
  },
  "dependencies": {
    "@oclif/errors": "^1.2.2",
    "@oclif/linewrap": "^1.0.0",
    "@oclif/screen": "^1.0.3",
    "ansi-escapes": "^3.1.0",
    "ansi-styles": "^3.2.1",
    "cardinal": "^2.1.1",
    "chalk": "^2.4.1",
    "clean-stack": "^1.3.0",
    "extract-stack": "^1.0.0",
    "fs-extra": "^7.0.0",
    "hyperlinker": "^1.0.0",
    "indent-string": "^3.2.0",
    "is-wsl": "^1.1.0",
    "lodash": "^4.17.11",
    "password-prompt": "^1.0.7",
    "semver": "^5.6.0",
    "strip-ansi": "^5.0.0",
    "supports-color": "^5.5.0",
    "supports-hyperlinks": "^1.0.1",
    "treeify": "^1.1.0"
  },
  "description": "cli IO utilities",
  "devDependencies": {
    "@oclif/tslint": "^3.1.0",
    "@types/ansi-styles": "^3.2.0",
    "@types/chai": "^4.1.6",
    "@types/chai-as-promised": "^7.1.0",
    "@types/clean-stack": "^1.3.0",
    "@types/extract-stack": "^1.0.0",
    "@types/fs-extra": "^5.0.4",
    "@types/indent-string": "^3.0.0",
    "@types/lodash": "^4.14.117",
    "@types/mocha": "^5.2.5",
    "@types/node": "^10.11.7",
    "@types/semver": "^5.5.0",
    "@types/strip-ansi": "^3.0.0",
    "@types/supports-color": "^5.3.0",
    "chai": "^4.2.0",
    "chai-as-promised": "^7.1.1",
    "eslint": "^5.7.0",
    "eslint-config-oclif": "^3.1.0",
    "fancy-test": "^1.4.1",
    "mocha": "^5.2.0",
    "ts-node": "^7.0.1",
    "tslint": "^5.11.0",
    "typescript": "^3.1.3"
  },
  "engines": {
    "node": ">=8.0.0"
  },
  "files": [
    "/lib"
  ],
  "homepage": "https://github.com/oclif/cli-ux",
  "keywords": [
    "oclif"
  ],
  "license": "MIT",
  "main": "lib/index.js",
  "name": "cli-ux",
  "optionalDependencies": {},
  "readme": "cli-ux\n======\n\ncli IO utilities\n\n[![Version](https://img.shields.io/npm/v/cli-ux.svg)](https://npmjs.org/package/cli-ux)\n[![CircleCI](https://circleci.com/gh/oclif/cli-ux/tree/master.svg?style=svg)](https://circleci.com/gh/oclif/cli-ux/tree/master)\n[![Appveyor CI](https://ci.appveyor.com/api/projects/status/github/oclif/cli-ux?branch=master&svg=true)](https://ci.appveyor.com/project/heroku/cli-ux/branch/master)\n[![Codecov](https://codecov.io/gh/oclif/cli-ux/branch/master/graph/badge.svg)](https://codecov.io/gh/oclif/cli-ux)\n[![Known Vulnerabilities](https://snyk.io/test/npm/cli-ux/badge.svg)](https://snyk.io/test/npm/cli-ux)\n[![Downloads/week](https://img.shields.io/npm/dw/cli-ux.svg)](https://npmjs.org/package/cli-ux)\n[![License](https://img.shields.io/npm/l/cli-ux.svg)](https://github.com/oclif/cli-ux/blob/master/package.json)\n\n# Usage\n\nThe following assumes you have installed `cli-ux` to your project with `npm install cli-ux` or `yarn add cli-ux` and have it required in your script (TypeScript example):\n\n```typescript\nimport cli from 'cli-ux'\ncli.prompt('What is your name?')\n```\n\n# cli.prompt()\n\nPrompt for user input.\n\n```typescript\n// just prompt for input\nawait cli.prompt('What is your name?')\n\n// mask input after enter is pressed\nawait cli.prompt('What is your two-factor token?', {type: 'mask'})\n\n// mask input on keypress (before enter is pressed)\nawait cli.prompt('What is your password?', {type: 'hide'})\n\n// yes/no confirmation\nawait cli.confirm('Continue?')\n\n// \"press any key to continue\"\nawait cli.anykey()\n```\n\n![prompt demo](assets/prompt.gif)\n\n# cli.url(text, uri)\n\nCreate a hyperlink (if supported in the terminal)\n\n```typescript\nawait cli.url('sometext', 'https://google.com')\n// shows sometext as a hyperlink in supported terminals\n// shows https://google.com in unsupported terminals\n```\n\n![url demo](assets/url.gif)\n\n# cli.open\n\nOpen a url in the browser\n\n```typescript\nawait cli.open('https://oclif.io')\n```\n\n# cli.action\n\nShows a spinner\n\n```typescript\n// start the spinner\ncli.action.start('starting a process')\n// show on stdout instead of stderr\ncli.action.start('starting a process', {stdout: true})\n\n// stop the spinner\ncli.action.stop() // shows 'starting a process... done'\ncli.action.stop('custom message') // shows 'starting a process... custom message'\n```\n\nThis degrades gracefully when not connected to a TTY. It queues up any writes to stdout/stderr so they are displayed above the spinner.\n\n![action demo](assets/action.gif)\n\n# cli.annotation\n\nShows an iterm annotation\n\n```typescript\n// start the spinner\ncli.annotation('sometest', 'annotated with this text')\n```\n\n![annotation demo](assets/annotation.png)\n\n# cli.wait\n\nWaits for 1 second or given milliseconds\n\n```typescript\nawait cli.wait()\nawait cli.wait(3000)\n```\n\n# cli.tree\n\nGenerate a tree and display it\n\n```typescript\nlet tree = cli.tree()\ntree.insert('foo')\ntree.insert('bar')\n\nlet subtree = cli.tree()\nsubtree.insert('qux')\ntree.nodes.bar.insert('baz', subtree)\n\ntree.display()\n```\n\nOutputs:\n```shell\n├─ foo\n└─ bar\n   └─ baz\n      └─ qux\n```\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/oclif/cli-ux.git"
  },
  "scripts": {
    "build": "rm -rf lib && tsc",
    "lint": "tsc -p test --noEmit && tslint -p test -t stylish",
    "posttest": "yarn run lint",
    "prepublishOnly": "yarn run build",
    "test": "mocha --forbid-only \"test/**/*.test.ts\""
  },
  "types": "lib/index.d.ts",
  "version": "4.9.1"
}
