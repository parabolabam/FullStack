{"ast":null,"code":"import _classCallCheck from \"/home/vlad/NodeJS/githubTomato/app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/vlad/NodeJS/githubTomato/app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/vlad/NodeJS/githubTomato/app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/vlad/NodeJS/githubTomato/app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/vlad/NodeJS/githubTomato/app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/vlad/NodeJS/githubTomato/app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/vlad/NodeJS/githubTomato/app/src/components/Article.js\";\nimport React, { Component, PureComponent } from 'react';\n\nvar Article =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Article, _Component);\n\n  function Article(props) {\n    var _this;\n\n    _classCallCheck(this, Article);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Article).call(this, props));\n\n    _this.handleClick = function () {\n      _this.setState({\n        isOpen: !_this.state.isOpen\n      });\n\n      console.log(_this.state);\n    };\n\n    _this.state = {\n      isOpen: props.defaultOpen,\n      count: 0\n    };\n    _this.handleClick = handleClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Article, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      console.log('----', 'mounting');\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      if (nextProps.defaultOpen !== this.props.defaultOpen) {\n        this.setState({\n          isOpen: nextProps.defaultOpen\n        });\n      }\n    } // shouldComponentUpddate(nextProps, nextState) {\n    //     return this.state.isOpen !== nextState.isOpen\n    // }\n\n  }, {\n    key: \"componentWillUpdate\",\n    value: function componentWillUpdate() {\n      console.log('----', 'will update');\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var article = this.props.article;\n      var body = this.state.isOpen && React.createElement(\"section\", {\n        className: \"card-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, article.text);\n      return React.createElement(\"div\", {\n        className: \"card mx-auto\",\n        style: {\n          width: '50%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        onClick: this.incrementCounter,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, article.title, \"clicked \", this.state.count, React.createElement(\"button\", {\n        className: \"btn btn-primary btn-lg float-right\",\n        onClick: this.handleClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, this.state.isOpen ? 'Close' : 'Open'))), React.createElement(\"div\", {\n        className: \"card-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(\"h6\", {\n        className: \"card-subtitle text-muted\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, \"creation date:\", article.date), body));\n    }\n  }]);\n\n  return Article;\n}(Component);\n\nexport default Article;","map":{"version":3,"sources":["/home/vlad/NodeJS/githubTomato/app/src/components/Article.js"],"names":["React","Component","PureComponent","Article","props","handleClick","setState","isOpen","state","console","log","defaultOpen","count","bind","nextProps","article","body","text","width","incrementCounter","title","date"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,aAA3B,QAAgD,OAAhD;;IAGMC,O;;;;;AAEF,mBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,iFAAMA,KAAN;;AADe,UA4DnBC,WA5DmB,GA4DL,YAAM;AAChB,YAAKC,QAAL,CAAc;AACVC,QAAAA,MAAM,EAAE,CAAC,MAAKC,KAAL,CAAWD;AADV,OAAd;;AAGAE,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAKF,KAAjB;AACH,KAjEkB;;AAEf,UAAKA,KAAL,GAAa;AACTD,MAAAA,MAAM,EAAEH,KAAK,CAACO,WADL;AAETC,MAAAA,KAAK,EAAE;AAFE,KAAb;AAIA,UAAKP,WAAL,GAAmBA,WAAW,CAACQ,IAAZ,uDAAnB;AANe;AAOlB;;;;yCACoB;AAEjBJ,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoB,UAApB;AAEH;;;8CAEyBI,S,EAAW;AACjC,UAAIA,SAAS,CAACH,WAAV,KAA0B,KAAKP,KAAL,CAAWO,WAAzC,EAAsD;AAClD,aAAKL,QAAL,CAAc;AACVC,UAAAA,MAAM,EAAEO,SAAS,CAACH;AADR,SAAd;AAGH;AACJ,K,CAED;AACA;AACA;;;;0CAEsB;AAClBF,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoB,aAApB;AACH;;;6BAEQ;AAAA,UAEGK,OAFH,GAEe,KAAKX,KAFpB,CAEGW,OAFH;AAGL,UAAMC,IAAI,GAAG,KAAKR,KAAL,CAAWD,MAAX,IAAqB;AAAS,QAAA,SAAS,EAAC,WAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAgCQ,OAAO,CAACE,IAAxC,CAAlC;AACA,aAEI;AAAK,QAAA,SAAS,EAAC,cAAf;AAA8B,QAAA,KAAK,EAAI;AAAEC,UAAAA,KAAK,EAAC;AAAR,SAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACY;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAI,QAAA,OAAO,EAAE,KAAKC,gBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAqCJ,OAAO,CAACK,KAA7C,cACS,KAAKZ,KAAL,CAAWI,KADpB,EAEJ;AAAQ,QAAA,SAAS,EAAC,oCAAlB;AAAuD,QAAA,OAAO,EAAE,KAAKP,WAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAmF,KAAKG,KAAL,CAAWD,MAAX,GAAoB,OAApB,GAA8B,MAAjH,CAFI,CADJ,CADZ,EASQ;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAI,QAAA,SAAS,EAAC,0BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BACWQ,OAAO,CAACM,IADnB,CADA,EAIaL,IAJb,CATR,CAFJ;AAwBH;;;;EA5DiBf,S;;AAwEtB,eAAeE,OAAf","sourcesContent":["import React, { Component, PureComponent } from 'react';\n\n\nclass Article extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            isOpen: props.defaultOpen,\n            count: 0,\n        }\n        this.handleClick = handleClick.bind(this);\n    }\n    componentWillMount() {\n\n        console.log('----', 'mounting');\n\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.defaultOpen !== this.props.defaultOpen) {\n            this.setState({\n                isOpen: nextProps.defaultOpen\n            })\n        }\n    }\n\n    // shouldComponentUpddate(nextProps, nextState) {\n    //     return this.state.isOpen !== nextState.isOpen\n    // }\n\n    componentWillUpdate() {\n        console.log('----', 'will update')\n    }\n\n    render() {\n\n        const { article } = this.props;\n        const body = this.state.isOpen && <section className=\"card-text\">{article.text}</section>\n        return (\n\n            <div className=\"card mx-auto\" style = {{ width:'50%'}}> \n                        <div className=\"card-header\">\n                            <h2 onClick={this.incrementCounter}>{article.title}\n                            clicked {this.state.count}\n                        <button className=\"btn btn-primary btn-lg float-right\" onClick={this.handleClick}>{this.state.isOpen ? 'Close' : 'Open'}</button>     \n                    \n                        </h2>\n                        </div>\n                        \n                    <div className=\"card-body\">\n                    <h6 className=\"card-subtitle text-muted\">\n                creation date:{article.date} \n                </h6>\n                                {body}\n\n                    </div>\n                \n               </div>\n\n        )\n\n\n    }\n\n    handleClick = () => {\n        this.setState({\n            isOpen: !this.state.isOpen\n        })\n        console.log(this.state);\n    }\n\n}\n\n\nexport default Article;"]},"metadata":{},"sourceType":"module"}