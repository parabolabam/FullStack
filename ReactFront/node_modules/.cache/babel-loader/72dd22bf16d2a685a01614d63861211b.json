{"ast":null,"code":"import _classCallCheck from \"/home/vlad/NodeJS/githubTomato/app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/vlad/NodeJS/githubTomato/app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/vlad/NodeJS/githubTomato/app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/vlad/NodeJS/githubTomato/app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/vlad/NodeJS/githubTomato/app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/vlad/NodeJS/githubTomato/app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/vlad/NodeJS/githubTomato/app/src/components/Article.js\";\nimport React, { Component, PureComponent } from 'react';\n\nvar Article =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  _inherits(Article, _PureComponent);\n\n  function Article(props) {\n    var _this;\n\n    _classCallCheck(this, Article);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Article).call(this, props));\n    _this.state = {\n      count: 0\n    };\n    _this.handleClick = handleClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.incrementCounter = incrementCounter.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Article, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      console.log('----', 'mounting');\n    } // componentWillReceiveProps(nextProps) {\n    //     if (nextProps.defaultOpen !== this.props.defaultOpen) {\n    //         this.setState({\n    //             isOpen: nextProps.defaultOpen\n    //         })\n    //     }\n    // }\n    // shouldComponentUpddate(nextProps, nextState) {\n    //     return this.state.isOpen !== nextState.isOpen\n    // }\n\n  }, {\n    key: \"componentWillUpdate\",\n    value: function componentWillUpdate() {\n      console.log('----', 'will update');\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      console.log('----', 2);\n      var _this$props = this.props,\n          article = _this$props.article,\n          isOpen = _this$props.isOpen,\n          onButtonClick = _this$props.onButtonClick;\n      var body = isOpen && React.createElement(\"section\", {\n        className: \"card-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, article.text);\n      return React.createElement(\"div\", {\n        className: \"card mx-auto\",\n        style: {\n          width: '50%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        onClick: this.incrementCounter,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, article.title, \"clicked \", this.state.count, React.createElement(\"button\", {\n        className: \"btn btn-primary btn-lg float-right\",\n        onClick: onButtonClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, isOpen ? 'Close' : 'Open'))), React.createElement(\"div\", {\n        className: \"card-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(\"h6\", {\n        className: \"card-subtitle text-muted\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, \"creation date:\", article.date), body));\n    }\n  }]);\n\n  return Article;\n}(PureComponent);\n\nfunction incrementCounter() {\n  this.setState({\n    count: this.state.count + 1\n  });\n}\n\nexport default Article;","map":{"version":3,"sources":["/home/vlad/NodeJS/githubTomato/app/src/components/Article.js"],"names":["React","Component","PureComponent","Article","props","state","count","handleClick","bind","incrementCounter","console","log","article","isOpen","onButtonClick","body","text","width","title","date","setState"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,aAA3B,QAAgD,OAAhD;;IAGMC,O;;;;;AAEF,mBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,iFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE;AADE,KAAb;AAGA,UAAKC,WAAL,GAAmBA,WAAW,CAACC,IAAZ,uDAAnB;AACA,UAAKC,gBAAL,GAAwBA,gBAAgB,CAACD,IAAjB,uDAAxB;AANe;AAOlB;;;;yCAMoB;AAEjBE,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoB,UAApB;AAEH,K,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;;;0CAEsB;AAClBD,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoB,aAApB;AACH;;;6BAEQ;AACLD,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoB,CAApB;AADK,wBAEsC,KAAKP,KAF3C;AAAA,UAEGQ,OAFH,eAEGA,OAFH;AAAA,UAEYC,MAFZ,eAEYA,MAFZ;AAAA,UAEoBC,aAFpB,eAEoBA,aAFpB;AAGL,UAAMC,IAAI,GAAGF,MAAM,IAAI;AAAS,QAAA,SAAS,EAAC,WAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAgCD,OAAO,CAACI,IAAxC,CAAvB;AACA,aAEI;AAAK,QAAA,SAAS,EAAC,cAAf;AAA8B,QAAA,KAAK,EAAI;AAAEC,UAAAA,KAAK,EAAC;AAAR,SAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAI,QAAA,OAAO,EAAE,KAAKR,gBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAqCG,OAAO,CAACM,KAA7C,cACS,KAAKb,KAAL,CAAWC,KADpB,EAEJ;AAAQ,QAAA,SAAS,EAAC,oCAAlB;AAAuD,QAAA,OAAO,EAAEQ,aAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAgFD,MAAM,GAAG,OAAH,GAAa,MAAnG,CAFI,CADJ,CADA,EASJ;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAI,QAAA,SAAS,EAAC,0BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BACWD,OAAO,CAACO,IADnB,CADA,EAIaJ,IAJb,CATI,CAFJ;AAwBH;;;;EAjEiBb,a;;AAqEtB,SAASO,gBAAT,GAA4B;AACxB,OAAKW,QAAL,CAAc;AACVd,IAAAA,KAAK,EAAE,KAAKD,KAAL,CAAWC,KAAX,GAAmB;AADhB,GAAd;AAIH;;AAGD,eAAeH,OAAf","sourcesContent":["import React, { Component, PureComponent } from 'react';\n\n\nclass Article extends PureComponent {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            count: 0,\n        }\n        this.handleClick = handleClick.bind(this);\n        this.incrementCounter = incrementCounter.bind(this);\n    }\n\n\n\n\n\n    componentWillMount() {\n\n        console.log('----', 'mounting');\n\n    }\n\n    // componentWillReceiveProps(nextProps) {\n    //     if (nextProps.defaultOpen !== this.props.defaultOpen) {\n    //         this.setState({\n    //             isOpen: nextProps.defaultOpen\n    //         })\n    //     }\n    // }\n\n    // shouldComponentUpddate(nextProps, nextState) {\n    //     return this.state.isOpen !== nextState.isOpen\n    // }\n\n    componentWillUpdate() {\n        console.log('----', 'will update')\n    }\n\n    render() {\n        console.log('----', 2);\n        const { article, isOpen, onButtonClick } = this.props;\n        const body = isOpen && <section className=\"card-text\">{article.text}</section>\n        return (\n\n            <div className=\"card mx-auto\" style = {{ width:'50%'}}> \n            <div className=\"card-header\">\n                <h2 onClick={this.incrementCounter}>{article.title}\n                clicked {this.state.count}\n            <button className=\"btn btn-primary btn-lg float-right\" onClick={onButtonClick}>{isOpen ? 'Close' : 'Open'}</button>     \n        \n            </h2>\n            </div>\n            \n        <div className=\"card-body\">\n        <h6 className=\"card-subtitle text-muted\">\n    creation date:{article.date} \n    </h6>\n                    {body}\n\n        </div>\n    \n   </div>\n\n        )\n\n\n    }\n}\n\n\nfunction incrementCounter() {\n    this.setState({\n        count: this.state.count + 1\n    })\n\n}\n\n\nexport default Article;"]},"metadata":{},"sourceType":"module"}